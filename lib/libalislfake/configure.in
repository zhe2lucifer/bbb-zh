#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT([libalislfake], [0.0.0], [jonathan.chen@alitech.com], [libalislfake], [http://www.alitech.com])
AC_PREREQ([2.68])


AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([foreign -Wall -Werror])

LIBALISLFAKE_MAJOR_VERSION=0
LIBALISLFAKE_MINOR_VERSION=0
LIBALISLFAKE_MICRO_VERSION=0
LIBALISLFAKE_INTERFACE_AGE=0
LIBALISLFAKE_BINARY_AGE=0
LIBALISLFAKE_VERSION=$LIBALISLFAKE_MAJOR_VERSION.$LIBALISLFAKE_MINOR_VERSION.$LIBALISLFAKE_MICRO_VERSION

AC_SUBST(LIBALISLFAKE_MAJOR_VERSION)
AC_SUBST(LIBALISLFAKE_MINOR_VERSION)
AC_SUBST(LIBALISLFAKE_MICRO_VERSION)
AC_SUBST(LIBALISLFAKE_INTERFACE_AGE)
AC_SUBST(LIBALISLFAKE_BINARY_AGE)
AC_SUBST(LIBALISLFAKE_VERSION)

AC_DEFINE_UNQUOTED(LIBALILSFAKE_VERSION, "$LIBALISLFAKE_VERSION", [The libalislfake version])
AC_DEFINE_UNQUOTED(LIBALISLFAKE_MAJOR_VERSION, $LIBALISLFAKE_MAJOR_VERSION, [The libalislfake major version])
AC_DEFINE_UNQUOTED(LIBALISLFAKE_MINOR_VERSION, $LIBALISLFAKE_MINOR_VERSION, [The libalislfake minor version])
AC_DEFINE_UNQUOTED(LIBALISLFAKE_MICRO_VERSION, $LIBALISLFAKE_MICRO_VERSION, [The libalislfake micro version])

PACKAGE=libalislfake
VERSION=$LIBALISLFAKE_VERSION

# libtool versioning
LT_RELEASE=$LIBALISLFAKE_MAJOR_VERSION.$LIBALISLFAKE__MINOR_VERSION
LT_CURRENT=`expr $LIBALISLFAKE_MICRO_VERSION - $LIBALISLFAKE_INTERFACE_AGE`
LT_BINARY=`expr $LIBALISLFAKE_MICRO_VERSION - $LIBALISLFAKE_BINARY_AGE`
LT_REVISION=$LIBALIPLTFLOG_INTERFACE_AGE
LT_AGE=`expr $LIBALISLFAKE_BINARY_AGE - $LIBALISLFAKE_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_BINARY)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

# Checks for programs.

AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL

# Checks for libraries.

# Checks for header files.

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

AC_CHECK_FUNCS([getopt getopt_long])

AC_ARG_ENABLE(examples,
			  AC_HELP_STRING([--enable-examples],              
						     [build test programs @<:@default=no@:>@]),
			  [], [enable_examples=no])
AM_CONDITIONAL(BUILD_EXAMPLES, test "$enable_examples" = "yes")

AC_ARG_ENABLE(docs,
			  AC_HELP_STRING([--enable-docs],					
						     [build documentation @<:@default=no@:>@]),
			  [], [enable_docs=no])
AM_CONDITIONAL(BUILD_DOCUMENT, test "$enable_docs" = "yes")

if test "$enable_docs" = "yes"; then
	AC_CHECK_PROG(DOXYGEN, [doxygen], [true], [false])
fi
AM_CONDITIONAL(HAVE_DOXYGEN, [test "$DOXYGEN" = "true"])

AM_CONDITIONAL(BUILD_SHARED, test "$enable_shared" = "yes")
AM_CONDITIONAL(BUILD_STATIC, test "$enable_static" = "yes")

AC_ARG_ENABLE(debug,
			  AC_HELP_STRING([--enable-debug],
			                 [enable debug information output @<:@default=no@:>@]),
			  [], [enable_debug=no])
if test "$enable_debug" = "yes"; then
	CFLAGS="-g3 -O0 -fno-inline -Wno-inline $CFLAGS"
    ENABLE_DEBUG=1
	AC_DEFINE(ENABLE_DEBUG,1,[Define to 1 if you want to output log.])
else
	ENABLE_DEBUG=0
fi
AM_CONDITIONAL(BUILD_DEBUG, test "$enable_debug" = "yes")
AC_SUBST(ENABEL_DEBUG)



AC_OUTPUT([
Makefile
libalislfake.pc

src/Makefile

include/Makefile

examples/Makefile

utils/Makefile

doc/Makefile
doc/doxygen/Makefile
])
