#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_INIT([libalislce], [0.0.0], [terry.wu@alitech.com], [libalislce], [http://www.alitech.com])
AC_PREREQ([2.68])
AC_CONFIG_AUX_DIR([config-aux])
AM_INIT_AUTOMAKE([foreign -Wall -Werror])
LT_INIT
AC_CONFIG_HEADER([config.h])

LIBALISLCE_MAJOR_VERSION=0
LIBALISLCE_MINOR_VERSION=0
LIBALISLCE_MICRO_VERSION=0
LIBALISLCE_INTERFACE_AGE=0
LIBALISLCE_BINARY_AGE=0
LIBALISLCE_VERSION=$LIBALISLCE_MAJOR_VERSION.$LIBALISLCE_MINOR_VERSION.$LIBALISLCE_MICRO_VERSION

AC_SUBST(LIBALISLCE_MAJOR_VERSION)
AC_SUBST(LIBALISLCE_MINOR_VERSION)
AC_SUBST(LIBALISLCE_MICRO_VERSION)
AC_SUBST(LIBALISLCE_INTERFACE_AGE)
AC_SUBST(LIBALISLCE_BINARY_AGE)
AC_SUBST(LIBALISLCE_VERSION)

AC_DEFINE_UNQUOTED(LIBALISLCE_VERSION, "$LIBALISLCE_VERSION", [The libalislce version])
AC_DEFINE_UNQUOTED(LIBALISLCE_MAJOR_VERSION, $LIBALISLCE_MAJOR_VERSION, [The libalislce major version])
AC_DEFINE_UNQUOTED(LIBALISLCE_MINOR_VERSION, $LIBALISLCE_MINOR_VERSION, [The libalislce minor version])
AC_DEFINE_UNQUOTED(LIBALISLCE_MICRO_VERSION, $LIBALISLCE_MICRO_VERSION, [The libalislce micro version])

PACKAGE=libalislce
VERSION=$LIBALISLCE_VERSION

# libtool versioning
LT_RELEASE=$LIBALISLCE_MAJOR_VERSION.$LIBALISLCE_MINOR_VERSION
LT_CURRENT=`expr $LIBALISLCE_MICRO_VERSION - $LIBALISLCE_INTERFACE_AGE`
LT_BINARY=`expr $LIBALISLCE_MICRO_VERSION - $LIBALISLCE_BINARY_AGE`
LT_REVISION=$LIBALISLCE_INTERFACE_AGE
LT_AGE=`expr $LIBALISLCE_BINARY_AGE - $LIBALISLCE_INTERFACE_AGE`

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_BINARY)
AC_SUBST(LT_REVISION)
AC_SUBST(LT_AGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

# Checks for programs.

AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL

# Checks for libraries.

# Checks for header files.

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

AC_CHECK_FUNCS([getopt getopt_long])

AC_ARG_ENABLE(examples,
			  AC_HELP_STRING([--enable-examples],              
						     [build test programs @<:@default=no@:>@]),
			  [], [enable_examples=no])
AM_CONDITIONAL(BUILD_EXAMPLES, test "$enable_examples" = "yes")


AC_ARG_ENABLE(docs,
			  AC_HELP_STRING([--enable-docs],					
						     [build documentation @<:@default=no@:>@]),
			  [], [enable_docs=no])
AM_CONDITIONAL(BUILD_DOCUMENT, test "$enable_docs" = "yes")

if test "$enable_docs" = "yes"; then
	AC_CHECK_PROG(DOXYGEN, [doxygen], [true], [false])
fi
AM_CONDITIONAL(HAVE_DOXYGEN, [test "$DOXYGEN" = "true"])

AM_CONDITIONAL(BUILD_SHARED, test "$enable_shared" = "yes")
AM_CONDITIONAL(BUILD_STATIC, test "$enable_static" = "yes")

AC_ARG_ENABLE(debug,
			  AC_HELP_STRING([--enable-debug],
			                 [enable debug information output @<:@default=no@:>@]),
			  [], [enable_debug=no])
if test "$enable_debug" = "yes"; then
	CFLAGS="-g3 -O0 -fno-inline -Wno-inline $CFLAGS"
	ENABLE_DEBUG=1
	AC_DEFINE(ENABLE_DEBUG,1,[Define to 1 if you want to output log.])
else
	ENABLE_DEBUG=0
fi
AM_CONDITIONAL(BUILD_DEBUG, test "$enable_debug" = "yes")
AC_SUBST(ENABLE_DEBUG)

AC_CONFIG_FILES([
Makefile
libalislce.pc
src/Makefile
include/Makefile
examples/Makefile
doc/Makefile
doc/doxygen/Makefile
])
AC_OUTPUT

AC_MSG_RESULT([examples   : $enable_example])
AC_MSG_RESULT([docs       : $DOXYGEN])
AC_MSG_RESULT([debug      : $enable_debug])
