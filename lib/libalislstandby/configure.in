#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.68])
AC_INIT([libalislstandby], [0.0.0], [Alan.Zhang@alitech.com], [libalislstandby], [http://www.alitech.com])
AC_CONFIG_HEADERS([config.h])

LIBALISLSTANDBY_MAJOR_VERSION=0
LIBALISLSTANDBY_MINOR_VERSION=0
LIBALISLSTANDBY_MICRO_VERSION=0
LIBALISLSTANDBY_INTERFACE_AGE=0
LIBALISLSTANDBY_BINARY_AGE=0
LIBALISLSTANDBY_VERSION=$LIBALISLSTANDBY_MAJOR_VERSION.$LIBALISLSTANDBY_MINOR_VERSION.$LIBALISLSTANDBY_MICRO_VERSION

AC_SUBST(LIBALISLSTANDBY_MAJOR_VERSION)
AC_SUBST(LIBALISLSTANDBY_MINOR_VERSION)
AC_SUBST(LIBALISLSTANDBY_MICRO_VERSION)
AC_SUBST(LIBALISLSTANDBY_INTERFACE_AGE)
AC_SUBST(LIBALISLSTANDBY_BINARY_AGE_AGE)
AC_SUBST(LIBALISLSTANDBY_VERSION)

AC_DEFINE_UNQUOTED(LIBALISLSTANDBY_VERSION, "$LIBALISLSTANDBY_VERSION", [The libalislstandby version])
AC_DEFINE_UNQUOTED(LIBALISLSTANDBY_MAJOR_VERSION, $LIBALISLSTANDBY_MAJOR_VERSION, [The libalislstandby major version])
AC_DEFINE_UNQUOTED(LIBALISLSTANDBY_MINOR_VERSION, $LIBALISLSTANDBY_MINOR_VERSION, [The libalislstandby minor version])
AC_DEFINE_UNQUOTED(LIBALISLSTANDBY_MICRO_VERSION, $LIBALISLSTANDBY_MICRO_VERSION, [The libalislstandby micro version])

PACKAGE=libalislstandby
VERSION=$LIBALISLSTANDBY_VERSION

# libtool versioning
LT_RELEASE=$LIBALISLSTANDBY_MAJOR_VERSION.$LIBALISLSTANDBY_MINOR_VERSION
LT_CURRENT='expr $LIBALISLSTANDBY_MICRO_VERSION - $LIBALISLSTANDBY_INTERFACE_AGE'
LT_BINARY='expr $LIBALISLSTANDBY_MICRO_VERSION -$LIBALISLSTANDBY_BINARY_AGE'
LT_REVISON=$LIBALISLSTANDBY_INTERFACE_AGE
LT_AGE='expr $LIBALISLSTANDBY_BINARY_AGE -$LIBALISLSTANDBY_INTERFACE_AGE'

AC_SUBST(LT_RELEASE)
AC_SUBST(LT_CURRENT)
AC_SUBST(LT_BINARY)
AC_SUBST(LT_REVISON)
AC_SUBST(LT_AGE)

AM_INIT_AUTOMAKE($PACKAGE, $VERSION, no-define)

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AM_PROG_LIBTOOL
AM_PROG_CC_C_O

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([stdlib.h])

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.
AC_CHECK_FUNCS([getopt getopt_long])

AC_ARG_ENABLE([examples],
			  AC_HELP_STRING([--enable-examples],
							 [build sample programs @<:@default=no:>@]),
			  [],
			  [enable_examples=no])
AM_CONDITIONAL(BUILD_EXAMPLES, test "$enable_examples" = "yes")	

AC_ARG_ENABLE([tests],
			  AC_HELP_STRING([--enable-tests],
							 [build module unitest @<:@default=no:>@]),
			  [],
			  [enable_tests=no])

AM_CONDITIONAL(BUILD_TESTS, test "$enable_tests" = "yes")

AC_ARG_ENABLE([docs],
			  AC_HELP_STRING([--enable-docs],
							[build documentation @<:default=no:>@]),
			 [],
			 [enable_docs=no])
AM_CONDITIONAL(BUILD_DOCUMENT, test "$enable_docs" = "yes")

if test "$enable_docs" = "yes"; then
	AC_CHECK_PROG(DOXYGEN, [doxygen], [true], [false])
fi
AM_CONDITIONAL(HAVE_DOXYGEN, [test "$DOXYGEN" = "ture"])

AM_CONDITIONAL(BUILD_SHARED, [test "$enable_shared" = "yes"])


AM_CONDITIONAL(BUILD_STATIC,  [test "$enable_static" = "yes"])

AC_ARG_ENABLE([debug],
			  AC_HELP_STRING([--enable-debug],
							 [enable debug information output @<:@default=no@:>@]),
			 [],
			 [enable_debug=no])
if test "$enable_debug" = "yes"; then
	CFLAGS="-g3 -O0 -fno-inline -Wno-inline $CFLAGS"
	ENABLE_DEBUG=1
	AC_DEFINE(ENABLE_DEBUG, 1 , [Define to 1 if you want to output log.])
else 
	ENABLE_DEBUG=0
fi

AM_CONDITIONAL(BUILD_DEBUG, test "$enable_debug" = "yes")
AC_SUBST(ENABLE_DEBUG)


AC_OUTPUT([
Makefile
libalislstandby.pc

src/Makefile
include/Makefile
doc/Makefile
doc/doxygen/Makefile
examples/Makefile

])

AC_MSG_RESULT([])
AC_MSG_RESULT([examples    : ${enable_examples}])
AC_MSG_RESULT([debug       : ${enable_debug}])
AC_MSG_RESULT([docs        : ${DOXYGEN}])
AC_MSG_RESULT([cflags      : ${CFLAGS}])
